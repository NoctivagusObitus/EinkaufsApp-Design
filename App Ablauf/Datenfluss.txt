1.0
Start der Applikation.


1.1
Automatischer Abgleich ob Email-Adresse und Passwort gespeichert. Wenn ja automatisch anmelden. Ansonsten 1.2


1.2
Weiter zu 1.3


1.3
Nutzer-Entscheidung, entweder 1.3.1 oder 1.3.2 anschließend.

1.3.1
Anzeigen von mehreren Nutzer-Eingabefeldern zur Registrierung:
Texteingabefeld: Email-Adresse (dient als Nutzername, muss unique sein)
Texteingabefeld: Passwort
Texteingabefeld: Passwort bestätigen
Button zum Anklicken: Registrierung bestätigen.

1.3.2
Anzeige von Nutzer-Eingabefeldern zur Anmeldung:
Texteingabefeld: Email-Adresse
Texteingabefeld: Passwort
Button zum Anklicken: Anmelden


1.4
Eingabe der Daten in die Felder von 1.3.1:
Texteingabefeld: Email-Adresse
Texteingabefeld: Passwort
Texteingabefeld: Passwort bestätigen
Button zum Anklicken: Registrierung bestätigen.

1.4.1
Daten aus 1.4 werden mit Datenbank abgeglichen und zwischengespeichert.
Eingegebende Email-Adresse auf Einmaligkeit prüfen.
Eingegebende Passwöter auf Gleichheit überprüfen.

1.4.2
Falls Eingaben nicht korrekt weiter zu 1.4.4. Ansonsten 1.4.3

1.4.3
Sinn nicht verstanden. Erneute Prüfung hier nicht notwendig? Weiter zu 2.0

1.4.4
Falls eingegbene Passwörter nicht übereinstimmen, Passwort-Fehlermeldung anzeigen.
Passwort-Fehlermeldung: Passwörter stimmen nicht überein.
Falls eingegebene Email-Adresse nicht einmallig, Email-Fehlermeldung anzeigen.
Email-Fehlermeldung: Die eingebene Email-Adresse wird bereits verwendet.

1.4.5
Anzeigen des Registrierungs-Bildschirms.
Bei Passwort-Fehlermeldung aus 1.4.4, Email-Adresse schon voreingetragen im Registrations-Screen.
Wenn Email-Fehlermeldung aus 1.4.4, alle Felder im Registrations-Screen wieder leer.


1.5
Befüllen der Felder von 1.3.2:
Texteingabefeld: Email-Adresse
Texteingabefeld: Passwort
Button zum Anklicken: Anmelden

1.5.1
Abgleich der eingegebenden Daten in 1.5 mit Datenbank. Zwischenspeichern der Email-Adresse.

1.5.2
Wenn Abgleich richtig, dann weiter zu 2.0 (Übergabe von Email als Identifizierungsmöglichkeit für weitere Aktionen?)
Wenn eine der Eingaben falsch, weiter zu 1.5.3

1.5.3
Fehlermeldung ausgeben: Benutzer oder Passwort unbekannt.
Email-Adresse wird vorausgefüllt. Erneute Passwort-Eingabe durch Nutzer.


2.0
Anzeigen des Startbildschirms bzw. Hauptmenü


3.0
Beginn des Einkauf-Prozesses


3.0.1
Abfrage an Datenbank, ob ein nicht als geschlossen gekennzeichneter Einkauf vorliegt.


3.0.2
Wenn Abfrage aus 3.0.1 Ja ergibt, dann 3.03
Wenn Abfrage aus 3.0.1 Nein ergibt, dann 3.1


3.0.3
Popup, ob Nutzer den Einkauf fortsetzen möchte.
Wenn Ja (3.0.5) dann weiter mit 3.0.6
Wenn Nein (3.0.4) weiter mit 3.1


3.0.4
Nutzerentscheidung


3.0.5
Nutzerentscheidung


3.0.6
Aufrufen der als nicht abgeschlossenen gekennzeichneten Einkaufsliste aus Datenbank. Ausgabe in 3.9


3.1
GPS-Abfrage nach Standort des Nutzers. (Längen- und Breitengrad ?). In Datenbank nach vorhandenen Märkten suchen, welche eine ähnliche Position besitzen.
Ähnliche Position ist noch zu definieren; Umkreis von 200/500 Metern um Nutzerstandort zum Beispiel. Umkreis einstellbar durch Nutzer?
// Für Später, eventuell Karte mit Stecknadeln statt Liste


3.2
Liste der Ergebnisse der Datenbank-Abfrage aus 3.1 anzeigen. Wenn keine Ergebnisse vorhanden, leere Liste anzeigen.


3.3
Click-Button: Zurück
Wird in der Liste der verfügbaren Märkte (3.2) angezeigt.


3.4
Nutzerentscheidung, ob die Liste aus 3.2 gewünschten Markt enthält.
Falls Ja, weiter mit 3.6
Falls Nein, Unterprogramm Markt aufnehmen (3.5) starten


3.5
Unterprogramm Markt aufnehmen, siehe zugehöriges Dokument


3.6
Nutzerauswahl des gewünschten Marktes.


3.7
Nutzer wird gefragt, ob er als Einzelperson einkaufen möchte oder für eine Gruppe.


3.7.1
Konkrete Nutzerentscheidung zu 3.7 entweder weiter mit 3.7.2 oder 3.7.3


3.7.2
Einzelpersoneinkauf ausgewählt, weiter zu 3.8


3.7.3
Gruppeneinkauf ausgewählt. Weiter zu 3.7.4


3.7.4
Anzeigen der vorhandenen Gruppen. Entweder 3.7.5 oder Unterprogramm Gruppe erstellen (5.1)


3.7.5
Auswahl einer bestehenden Gruppe für den Einkauf


3.7.6
Abfrage beim Nutzer ob die Gruppe vollständig (3.7.7) ist oder nicht (5.2).


3.7.7
Gruppenzusammenstellung fertig, weiter zu Barcodescanner (3.8)


3.8
